/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; /* все элементы будут наследовать   box-sizing: border-box; от боди */
}

html {
  font-size: 62.5%;
  /* 
  Если для элемента html установить font-size в процентах, то процент берется от шрифта браузера по умолчанию.
  Браузеры по умолчанию ставят шрифт равным 16px, а нам нужен 10px, поэтому 62.5% от 16px это как раз 10px.
  Можно сразу жестко задать 10px, но тогда те пользователи,
  которые в настройках своих браузеров увеличили шрифт по умолчанию, не увидят эффекта увелечения шрифта,
  если мы жестко его перезапишем в 10px */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url('../img/hero.jpg');
  background-size: cover;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.logo {
  height: 3.5rem;
}

/* выравнивание по центру c помощью абсолютного позиционирования и смещения блока на 50% с помощью transfom */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  backface-visibility: hidden; /* чтобы убрать лишнею дрож элемента во временя анимации в некоторых браузерах */
  margin-bottom: 6rem;
}

.heading-primary-main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;

  animation: moveInRight 1s ease-out;
}

/* Now for the browser performance, it's best to only ever animate two different properties.
One is opacity, which is the one that we're using here, and the other one is the transform property.
That's what the browsers are optimized for, for these two properties.
But with transform, we can do a whole lot.
And so it's everything that we need actually to make all these cool animations that you can imagine. */

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translate(1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translate(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInButton .5s ease-out .75s;
  animation-fill-mode: backwards; /* backwards применяет стили из 0% @moveInButton. И конкретно здесь позволяет кнопке не появляться раньше времени */
}