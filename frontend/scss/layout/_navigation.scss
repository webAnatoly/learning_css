.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, .1);
    text-align: center; // центрировать горизонтальные три штриха олицетворяющие кнопку, которые являются span элементом с псевдоклассами ::before and ::after
    cursor: pointer;
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient($color-primary-light, $color-primary-dark);
    z-index: 999; // z-index работает только на тех элементах, которым прописано свойство position. "Applies to:	positioned elements" https://www.w3.org/TR/css-position-3/#propdef-z-index
    transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);
    // Шпаргалка функций плавности от злых марсиан https://easings.net/ru.
    // А это конструктор функций плавности http://cubic-bezier.com/#.17,.67,.93,.47
  }

  &__nav {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1500; // над background, но под button
    transition: all .8s;

    // скрыть меню навигации
    opacity: 0;
    transform: translateX(-110vw);
  }


  &__list {
    @include absoluteCenter;
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {
    &:link,
    &:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
      background-size: 230%;
      outline: 0;
      transition: all .4s;
      backface-visibility: hidden;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:hover,
    &:active {
      background-position: 100%;
      color: $color-primary;
    }
  }

  //показать меню навигации на весь экран
  &__checkbox:checked ~ &__background, {
    transform: scale(80);
  }
  
  &__checkbox:checked ~ &__nav, {
    // показать меню навигации
    opacity: 1;
    transform: translateY(0);
  }

  //ICON
  &__icon {
    position: relative;
    margin-top: 3.4rem;
    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block;
    }

    &::before, // для псевдоэлементов родительским является элемнт на котором эти псевдоэлементы объявляются. В данном случае родительским элементом будет <span class="navigation__icon">
    &::after {
      content: "";
      position: absolute;
      left:0;
      transition: all .2s;
    }

    &::before { top: -.8rem; }
    &::after { top: .8rem; }
  }

  // мини-эффект расхождения трех линий на кнопке во время ховера
  &__button:hover &__icon::before { top: -1rem } 
  &__button:hover &__icon::after { top: 1rem }

  //горизонтальные полоски (при нажатии) кнопки превратить в крестик символизирующий закрытие меню
  &__checkbox:checked + &__button &__icon, {
    background-color: transparent; // скрыть среднею полоску
  }

  &__checkbox:checked + &__button &__icon::before, {
    top: 0;
    transform: rotate(135deg); // [TO REMEMBER] Еще есть свойство transform-origin, которое позволяет задавать точку вокруг которой будет поворачиваться элемент. Например transform-orign: top left прокрутит элемент вокруг верхнего левого угла.
  }

  &__checkbox:checked + &__button &__icon::after, {
    top: 0;
    transform: rotate(-135deg);
  }
}